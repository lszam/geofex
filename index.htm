<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DOCX to HTML Converter</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.2/mammoth.browser.min.js"></script>
</head>
<body>
    <h1>Convert DOCX to HTML</h1>
    <div id="links">
        <a href="#" class="convert-link" data-url="https://api.github.com/repos/lszam/geof-library/contents/exercises/grav_conceitos.docx">Convert Document 1</a>
        <a href="#" class="convert-link" data-url="https://api.github.com/repos/lszam/geof-library/contents/exercises/grav_interpretacao_01.docx">Convert Document 2</a>        
    </div>
    <div id="output"></div>

    <script>
        document.querySelectorAll('.convert-link').forEach(link => {
            link.addEventListener('click', function(event) {
                event.preventDefault();
                
                var githubApiUrl = event.target.getAttribute('data-url');
                
                fetch(githubApiUrl)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        var content = data.content.replace(/\n/g, ''); // Remove quebras de linha
                        var binaryString = atob(content); // Decodifica base64
                        var arrayBuffer = new Uint8Array(binaryString.length);
                        for (var i = 0; i < binaryString.length; i++) {
                            arrayBuffer[i] = binaryString.charCodeAt(i);
                        }
                        return arrayBuffer.buffer;
                    })
                    .then(arrayBuffer => mammoth.convertToHtml({arrayBuffer: arrayBuffer, convertImage: mammoth.images.inline(function(element) {
                        return element.read("base64").then(function(imageBuffer) {
                            return {
                                src: "data:" + element.contentType + ";base64," + imageBuffer
                            };
                        });
                    })}))
                    .then(displayResult)
                    .catch(handleError);
            });
        });

        function displayResult(result) {
            document.getElementById('output').innerHTML = result.value;
        }

        function handleError(err) {
            console.error('Error:', err);
        }
    </script>
</body>
</html>
